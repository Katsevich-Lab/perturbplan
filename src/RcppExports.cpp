// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rejection_computation_cpp
NumericVector rejection_computation_cpp(const NumericVector& mean_list, const NumericVector& sd_list, const std::string& side, double cutoff);
RcppExport SEXP _perturbplan_rejection_computation_cpp(SEXP mean_listSEXP, SEXP sd_listSEXP, SEXP sideSEXP, SEXP cutoffSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type mean_list(mean_listSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type sd_list(sd_listSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type side(sideSEXP);
    Rcpp::traits::input_parameter< double >::type cutoff(cutoffSEXP);
    rcpp_result_gen = Rcpp::wrap(rejection_computation_cpp(mean_list, sd_list, side, cutoff));
    return rcpp_result_gen;
END_RCPP
}
// FDP_estimate_cpp
double FDP_estimate_cpp(const NumericVector& mean_list, const NumericVector& sd_list, const std::string& side, double cutoff, const NumericVector& QC_prob);
RcppExport SEXP _perturbplan_FDP_estimate_cpp(SEXP mean_listSEXP, SEXP sd_listSEXP, SEXP sideSEXP, SEXP cutoffSEXP, SEXP QC_probSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type mean_list(mean_listSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type sd_list(sd_listSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type side(sideSEXP);
    Rcpp::traits::input_parameter< double >::type cutoff(cutoffSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type QC_prob(QC_probSEXP);
    rcpp_result_gen = Rcpp::wrap(FDP_estimate_cpp(mean_list, sd_list, side, cutoff, QC_prob));
    return rcpp_result_gen;
END_RCPP
}
// fdp_hat_cpp
double fdp_hat_cpp(double t, const NumericVector& mean_list, const NumericVector& sd_list, const std::string& side, const NumericVector& QC_prob);
RcppExport SEXP _perturbplan_fdp_hat_cpp(SEXP tSEXP, SEXP mean_listSEXP, SEXP sd_listSEXP, SEXP sideSEXP, SEXP QC_probSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type mean_list(mean_listSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type sd_list(sd_listSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type side(sideSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type QC_prob(QC_probSEXP);
    rcpp_result_gen = Rcpp::wrap(fdp_hat_cpp(t, mean_list, sd_list, side, QC_prob));
    return rcpp_result_gen;
END_RCPP
}
// BH_cutoff_cpp
double BH_cutoff_cpp(const NumericVector& mean_list, const NumericVector& sd_list, const std::string& side, double multiple_testing_alpha, const NumericVector& QC_prob);
RcppExport SEXP _perturbplan_BH_cutoff_cpp(SEXP mean_listSEXP, SEXP sd_listSEXP, SEXP sideSEXP, SEXP multiple_testing_alphaSEXP, SEXP QC_probSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type mean_list(mean_listSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type sd_list(sd_listSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type side(sideSEXP);
    Rcpp::traits::input_parameter< double >::type multiple_testing_alpha(multiple_testing_alphaSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type QC_prob(QC_probSEXP);
    rcpp_result_gen = Rcpp::wrap(BH_cutoff_cpp(mean_list, sd_list, side, multiple_testing_alpha, QC_prob));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_perturbplan_rejection_computation_cpp", (DL_FUNC) &_perturbplan_rejection_computation_cpp, 4},
    {"_perturbplan_FDP_estimate_cpp", (DL_FUNC) &_perturbplan_FDP_estimate_cpp, 5},
    {"_perturbplan_fdp_hat_cpp", (DL_FUNC) &_perturbplan_fdp_hat_cpp, 5},
    {"_perturbplan_BH_cutoff_cpp", (DL_FUNC) &_perturbplan_BH_cutoff_cpp, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_perturbplan(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
