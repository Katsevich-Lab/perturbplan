% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pilot_data_preprocessing.R
\name{reference_data_preprocessing_10x}
\alias{reference_data_preprocessing_10x}
\title{Aggregate Expression and QC Data from Multiple SRR-Level Cell Ranger Outputs}
\usage{
reference_data_preprocessing_10x(
  path_to_top_level_output,
  path_to_run_level_output = NULL,
  h5_rough = TRUE,
  skip_mapping_efficiency = FALSE
)
}
\arguments{
\item{path_to_top_level_output}{Character. Path to the top-level directory
containing Cell Ranger run-level subdirectories. Each subdirectory should contain
Cell Ranger output in the standard structure with \code{outs/} folders.}

\item{path_to_run_level_output}{Optional character vector. Names of specific run-level
directories to process (not full paths). Should match the basename of folders
inside \code{path_to_top_level_output}. If NULL, all subdirectories are processed.
Unmatched entries will trigger a warning.}

\item{h5_rough}{Logical. If TRUE (default), extracts UMI-level molecule information
from first SRR only for speed. If FALSE, combines UMI-level molecule information
from all SRRs (slower but more comprehensive).}

\item{skip_mapping_efficiency}{Logical. If TRUE, skips estimation of mapping efficiency.
If FALSE (default), calculates naive mapping efficiency. Set to TRUE when
\code{metrics_summary.csv} is unavailable or lacks "Number of Reads" column.}
}
\value{
A list with three elements:
\describe{
\item{response_matrix}{Sparse gene-by-cell expression matrix (genes as rows,
cells as columns) with row and column names. Contains only genes common across
all processed SRR runs, combined across all runs.}
\item{read_umi_table}{Data frame with UMI-level molecule information, including columns:
\itemize{
\item \code{num_reads}: Number of reads supporting this UMI-cell combination
\item \code{UMI_id}: UMI index
\item \code{cell_id}: Cell barcode
\item \code{response_id}: Gene identifier (e.g., Ensembl ID)
\item \code{srr_idx}: SRR run identifier
}}
\item{mapping_efficiency}{Numeric value between 0 and 1 representing the proportion
of reads that are confidently mapped to the transcriptome and assigned to a true
cell barcode (i.e., a cell barcode that appears in the filtered expression matrix)
among all raw reads recorded in \code{metrics_summary.csv} if
\code{skip_mapping_efficiency = FALSE}, or NULL if \code{skip_mapping_efficiency = TRUE}.}
}
}
\description{
Aggregates Cell Ranger outputs from multiple sequencing runs (SRRs) into a single
data structure containing gene expression matrices, UMI-level molecule information,
and naive mapping efficiency estimates. This is Step 1 of the pilot data preprocessing
workflow for PerturbPlan power analysis.
}
\details{
\subsection{Input Requirements}{

Your data should be organized with Cell Ranger output directories under a top-level folder:
\preformatted{
path_to_top_level_output/
├── SRR_run_1/
│   ├── outs/
│   │   ├── filtered_feature_bc_matrix/
│   │   │   ├── barcodes.tsv.gz
│   │   │   ├── features.tsv.gz
│   │   │   └── matrix.mtx.gz
│   │   ├── molecule_info.h5
│   │   ├── filtered_feature_bc_matrix.h5
│   │   └── metrics_summary.csv
├── SRR_run_2/
│   └── ...
└── SRR_run_3/
    └── ...
}

## Processing Steps

The function performs the following operations:
\enumerate{
  \item Lists all SRR directories under the given top-level folder
\item Optionally filters to a subset of run-level names
\item Reads gene expression matrices using \code{\link{obtain_qc_response_data}}
\item Identifies and retains only genes shared across all SRRs
\item Reads UMI-level molecule information using \code{\link{obtain_qc_read_umi_table}}
\item Calculates naive mapping efficiency using \code{\link{obtain_mapping_efficiency}}
}
}

\subsection{Important Notes}{

\itemize{
\item SRR directories should be generated by a recent version of \strong{Cell Ranger count}
(not Cell Ranger multi) configured for the perturbation (CRISPR or Perturb-seq) workflow
using standard output format
\item \strong{Cell Ranger multi is not currently supported} because: (1) its output directory
structure places files under \code{outs/per_sample_outs/\{sample_id\}/count/} instead of
directly under \code{outs/}, and (2) its \code{metrics_summary.csv} uses a row-based format
with "Library Type" and "Metric Name" columns, while Cell Ranger count uses a column-based
format where metric names are column headers
\item In some cases, \code{filtered_feature_bc_matrix/} may need to be produced by
unzipping \code{filtered_feature_bc_matrix.tar.gz}
\item For mapping efficiency calculation, \code{metrics_summary.csv} must include
a column named "Number of Reads" (Cell Ranger count format)
\item When \code{h5_rough = FALSE}, multiple mapping efficiencies are computed and
the median value is returned
}
}
}
\examples{
# Point to directory containing example Cell Ranger outputs
extdata_path <- system.file("extdata", package = "perturbplan")

# Aggregate data from all SRR runs
raw_data <- reference_data_preprocessing_10x(
  path_to_top_level_output = extdata_path,
  path_to_run_level_output = "cellranger_tiny",  # Only read subfolder cellranger_tiny
  h5_rough = TRUE,  # Use first SRR for QC data (faster)
  skip_mapping_efficiency = FALSE  # Estimate mapping efficiency
)

# Inspect structure
str(raw_data)

# Access components
head(raw_data$read_umi_table)
dim(raw_data$response_matrix)

}
\seealso{
\code{\link{reference_data_processing}} for Step 2 of the preprocessing workflow.

\code{\link{obtain_qc_response_data}}, \code{\link{obtain_qc_read_umi_table}},
and \code{\link{obtain_mapping_efficiency}} for details on data extraction.

See the vignette "Preprocess Reference Expression data for Web App" for the
complete preprocessing workflow: \code{vignette("preprocess-reference", package = "perturbplan")}
}
