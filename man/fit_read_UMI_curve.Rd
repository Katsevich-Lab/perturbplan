% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plan_help.R
\name{fit_read_UMI_curve}
\alias{fit_read_UMI_curve}
\title{Compute effective library size from read depth using UMI saturation curve}
\usage{
fit_read_UMI_curve(reads_per_cell, UMI_per_cell, variation)
}
\arguments{
\item{reads_per_cell}{Numeric. Total reads per cell.}

\item{UMI_per_cell}{Numeric. Maximum UMI per cell parameter from S-M curve fit.}

\item{variation}{Numeric. Variation parameter characterizing PCR bias from S-M curve fit.}
}
\value{
Numeric. Effective library size in UMIs.
}
\description{
This function computes the effective library size (in UMIs) from sequencing read depth
using fitted saturation curves that account for PCR amplification bias and UMI saturation.
}
\details{
The saturation-magnitude (S-M) curve model relates sequencing reads to unique UMI counts
accounting for:
\itemize{
\item PCR amplification variability
\item UMI saturation at high read depths
\item Platform-specific technical biases
}
}
\examples{
# Get library parameters from pilot data
pilot_data <- get_pilot_data_from_package("K562")
library_params <- pilot_data$library_parameters

# Define read depths to test
read_depths <- c(10000, 25000, 50000, 100000)

# Calculate effective library sizes
effective_umis <- fit_read_UMI_curve(
  reads_per_cell = read_depths,
  UMI_per_cell = library_params$UMI_per_cell,
  variation = library_params$variation
)

# View the results
data.frame(
  reads_per_cell = read_depths,
  effective_UMI = effective_umis,
  saturation_pct = round(100 * effective_umis / library_params$UMI_per_cell, 1)
)

# Get library parameters from pilot data
pilot_data <- get_pilot_data_from_package("K562")
library_params <- pilot_data$library_parameters

# Define read depths to test
read_depths <- c(10000, 25000, 50000, 100000)

# Calculate effective library sizes
effective_umis <- fit_read_UMI_curve(
  reads_per_cell = read_depths,
  UMI_per_cell = library_params$UMI_per_cell,
  variation = library_params$variation
)

# View the results
data.frame(
  reads_per_cell = read_depths,
  effective_UMI = effective_umis,
  saturation_pct = round(100 * effective_umis / library_params$UMI_per_cell, 1)
)

}
\seealso{
\code{\link{get_pilot_data_from_package}} for obtaining curve parameters
}
