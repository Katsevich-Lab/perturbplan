% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parameter_estimation_help.R
\name{library_computation}
\alias{library_computation}
\title{#' Obtain a data frame with information of all QC'd reads.
#'
#' @param path_to_outs_folder The path to the outs folder of the cellranger output.
#'
#' @return A data frame with columns \code{num_reads}, \code{UMI_id}, \code{cell_id}, and \code{response_id}
obtain_qc_data <- function(path_to_outs_folder){specify the particular h5 file of interest

raw_count_file_path <- sprintf("\%s/molecule_info.h5", path_to_outs_folder)
qc_info_file_path <- sprintf("\%s/filtered_feature_bc_matrix.h5", path_to_outs_folder)

###################### construct the raw data frame ##########################
raw_count_file <- rhdf5::h5read(raw_count_file_path, "count")
umi_idx <- rhdf5::h5read(raw_count_file_path, "umi")obtain cell index

barcode_idx <- rhdf5::h5read(raw_count_file_path, "barcode_idx")
cell_barcodes <- rhdf5::h5read(raw_count_file_path, "barcodes")
cell_idx <- cell_barcodes\link{barcode_idx + 1}append the gem_group

gem_group <- rhdf5::h5read(raw_count_file_path, "gem_group")
cell_id_with_gem <- paste(cell_idx, gem_group, sep = "-")obtain gene index for each RNA

RNA_idx <- rhdf5::h5read(raw_count_file_path, "feature_idx")
gene_reference <- rhdf5::h5read(raw_count_file_path, "features")
gene_idx <- gene_reference$id\link{RNA_idx + 1}store the data frame

raw_data_frame <- data.frame(
num_reads = raw_count_file,
UMI_id = umi_idx + 1,
cell_id = cell_id_with_gem,
response_id = gene_idx
)

############################ QC the raw data #################################
qc_cell <- rhdf5::h5read(qc_info_file_path, "matrix/barcodes")QC the raw data

qc_df <- raw_data_frame |> dplyr::filter(cell_id \%in\% qc_cell)return the reads vector

return(qc_df)
}}
\usage{
library_computation(QC_data, downsample_ratio = 0.7, D2_rough = 0.3)
}
\arguments{
\item{QC_data}{The QC'd data coming from the function obtain_qc_data.}

\item{downsample_ratio}{The ratio of the size of the downsampled dataset to the one of the original dataset.}

\item{D2_rough}{The rough estimate of D2 in the S-M curve model.}
}
\value{
A fitted S-M curve model in the form of a nlsLM object.
}
\description{
#' Obtain a data frame with information of all QC'd reads.
#'
#' @param path_to_outs_folder The path to the outs folder of the cellranger output.
#'
#' @return A data frame with columns \code{num_reads}, \code{UMI_id}, \code{cell_id}, and \code{response_id}
obtain_qc_data <- function(path_to_outs_folder){specify the particular h5 file of interest

raw_count_file_path <- sprintf("\%s/molecule_info.h5", path_to_outs_folder)
qc_info_file_path <- sprintf("\%s/filtered_feature_bc_matrix.h5", path_to_outs_folder)

###################### construct the raw data frame ##########################
raw_count_file <- rhdf5::h5read(raw_count_file_path, "count")
umi_idx <- rhdf5::h5read(raw_count_file_path, "umi")obtain cell index

barcode_idx <- rhdf5::h5read(raw_count_file_path, "barcode_idx")
cell_barcodes <- rhdf5::h5read(raw_count_file_path, "barcodes")
cell_idx <- cell_barcodes\link{barcode_idx + 1}append the gem_group

gem_group <- rhdf5::h5read(raw_count_file_path, "gem_group")
cell_id_with_gem <- paste(cell_idx, gem_group, sep = "-")obtain gene index for each RNA

RNA_idx <- rhdf5::h5read(raw_count_file_path, "feature_idx")
gene_reference <- rhdf5::h5read(raw_count_file_path, "features")
gene_idx <- gene_reference$id\link{RNA_idx + 1}store the data frame

raw_data_frame <- data.frame(
num_reads = raw_count_file,
UMI_id = umi_idx + 1,
cell_id = cell_id_with_gem,
response_id = gene_idx
)

############################ QC the raw data #################################
qc_cell <- rhdf5::h5read(qc_info_file_path, "matrix/barcodes")QC the raw data

qc_df <- raw_data_frame |> dplyr::filter(cell_id \%in\% qc_cell)return the reads vector

return(qc_df)
}
}
\section{extract the number of total cells}{
num_cells <- length(unique(QC_data$cell_id))
}

\section{extract the number of reads per cell}{
total_reads <- sum(QC_data$num_reads)
num_reads_per_cell <- total_reads / num_cells
}

\section{output the summary statistics}{

}

